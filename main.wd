(extern (printf fmt'ptr ...))
(extern (malloc size'u64)'ptr)
(extern (realloc p'ptr size'u64)'ptr)

(impl u64
    (func (to_i32 self)'i32 -> (cast self to i32))
)

(struct array<T> (data'ptr, size'u64, capacity'u64))

(impl array<T>
    (func (append self value'T) -> {
        (self.adjust self.size + 1)
        (store value to self.data (self.size.to_i32))
        (self.size = self.size + 1)
    })

    (func (adjust self size'u64) -> {
        (if size > self.capacity {
            (self.capacity = self.capacity * 2)
            (self.data = (realloc self.data self.capacity * (sizeof T)))
        })
    })

    (func (__index self index'i32)'T -> (load T from self.data index))
    (func (__newindex self index'i32 value'T) -> (store value to self.data index))
)

(func (main)'i32 -> {
    // test tuple
    (let t = (1, 2, 3))
    (printf "t.0 = %d\n" t.0)
    (printf "t.1 = %d\n" t.1)
    (printf "t.2 = %d\n" t.2)

    // test array
    (let a = [1, 2, 3])
    (printf "a[0] = %d\n" a[0])
    (printf "a[1] = %d\n" a[1])
    (printf "a[2] = %d\n" a[2])

    // test ptr
    (let ptr = (alloc i32))
    (store 1024 to ptr)
    (let v = (load i32 from ptr))
    (printf "v = %d\n" v)
    0
})